#!/usr/bin/env python3

import json
import locale
import sys


def load_data(filename):
  """Loads the contents of filename as a JSON file."""
  with open(filename) as json_file:
    data = json.load(json_file)
  return data


def format_car(car):
  """Given a car dictionary, returns a nicely formatted name."""
  return "{} {} ({})".format(
      car["car_make"], car["car_model"], car["car_year"])


def process_data(data):
  """Analyzes the data, looking for maximums.

  Returns a list of lines that summarize the information.
  """
  max_revenue = {"revenue": 0}
  maxsales=0
  years=[]
  yearsales=[]
  for item in data:
    # Calculate the revenue generated by this model (price * total_sales)
    # We need to convert the price from "$1234.56" to 1234.56
    item_price = locale.atof(item["price"].strip("$"))
    item_revenue = item["total_sales"] * item_price
    if item_revenue > max_revenue["revenue"]:
      item["revenue"] = item_revenue
      max_revenue = item
    # TODO: also handle max sales
    newsales=item["total_sales"]
    if newsales>maxsales:
      maxsales1=item
    # TODO: also handle most popular car_year
    newyear=(item["car"])["car_year"]
    if newyear not in years:
      years.append(newyear)
      yearsales.append(item["total_sales"])
    else:
      yearindex=years.index(newyear)
      yearsales[yearindex]=yearsales[yearindex]+item["total_sales"]
  bestyearsales=max(yearsales)
  bestyearindex=yearsales.index(bestyearsales)
  bestyear=years[bestyearindex]
  summary = [
    "The {} generated the most revenue: ${}".format(
      format_car(max_revenue["car"]), max_revenue["revenue"]),
  ]
  summary.append("The {} {} ({}) had the most sales: {}".format(maxsales1["car"]["car_make"],maxsales1["car"]["car_model"],maxsales1["car"]["year"],maxsales))
  summary.append("The most popular year was {} with {} sales.".format(bestyear,bestyearsales))
  return summary


def cars_dict_to_table(car_data):
  """Turns the data in car_data into a list of lists."""
  table_data = [["ID", "Car", "Price", "Total Sales"]]
  for item in car_data:
    table_data.append([item["id"], format_car(item["car"]), item["price"], item["total_sales"]])
  return table_data


def main(argv):
  """Process the JSON data and generate a full report out of it."""
  data = load_data("car_sales.json")
  summary = process_data(data)
  print(summary)
  # TODO: turn this into a PDF report
  import reports
  table_data=cars_dict_to_table(data)

  summary1=""
  summary2=""
  itemct=0
  for item in summary:
    if itemct==0:
      summary1=item
      summary2=item
    else:
      summary1=summary1+"<br/>"+item
      summary2=summary2+"\n"+item
    itemct+=1

  newreport=reports.generate('/tmp/cars.pdf',"Sales Sumamry for Last Month",summary1,table_data)
  # TODO: send the PDF report as an email attachment
  import emails
  newemail= emails.generate("automation.example.com","student-01-ac5559f2d09e@example.com","Sales summary for last month",summary2,'/tmp/cars.pdf')
  emails.send(newemail)
if __name__ == "__main__":
  main(sys.argv)

